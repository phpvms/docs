"use strict";(self.webpackChunkphpvms_docs=self.webpackChunkphpvms_docs||[]).push([[694],{8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var t=i(6540);const s={},l=t.createContext(s);function d(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(l.Provider,{value:n},e.children)}},9460:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"acars/plugins/getting-started","title":"Getting Started","description":"Overview","source":"@site/docs/acars/plugins/getting-started.md","sourceDirName":"acars/plugins","slug":"/acars/plugins/getting-started","permalink":"/acars/plugins/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/phpvms/docs/tree/master/docs/acars/plugins/getting-started.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting Started"},"sidebar":"docs","previous":{"title":"Customization","permalink":"/acars/customization"},"next":{"title":"Aircraft Configs","permalink":"/acars/plugins/aircraftconfigs"}}');var s=i(4848),l=i(8453);const d={id:"getting-started",title:"Getting Started"},r=void 0,a={},o=[{value:"Overview",id:"overview",level:2},{value:"The General Steps",id:"the-general-steps",level:2},{value:"Setup",id:"setup",level:2},{value:"Required:",id:"required",level:4},{value:"Customizing using the <code>.env</code> file:",id:"customizing-using-the-env-file",level:4},{value:"Commands",id:"commands",level:2},{value:"Build",id:"build",level:3},{value:"Automatically build and copy to ACARS",id:"automatically-build-and-copy-to-acars",level:3},{value:"Packaging a distribution file",id:"packaging-a-distribution-file",level:3},{value:"Disable Downloading Latest Defaults",id:"disable-downloading-latest-defaults",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The plugins and scripts for vmsACARS are written in Typescript, and then\ntranspiled to JS. Typescript ensures that the interfaces required are following,\nand that the proper things are returned so ACARS can run them. While Typescript\nisn't required, it's best to use it to ensure proper values are passed -\nespecially around enums."}),"\n",(0,s.jsx)(n.p,{children:"This PDK includes build scripts to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Convert Typescript to JS, with type checking/linting"}),"\n",(0,s.jsx)(n.li,{children:"Stamp the distribution package with versioning"}),"\n",(0,s.jsx)(n.li,{children:"GitHub Actions to build and deploy"}),"\n",(0,s.jsx)(n.li,{children:"Scripts to help with development"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"the-general-steps",children:"The General Steps"}),"\n",(0,s.jsxs)(n.p,{children:["First, fork the ",(0,s.jsx)(n.a,{href:"https://github.com/phpvms/acars-pdk",children:"acars-pdk"})," repository.\nFollow the setup below. Then start editing the scripts in the ",(0,s.jsx)(n.code,{children:"/src"})," directory,\ndepending on what you want to do. Then, you upload it, and phpVMS will\ndistribute it to all of your pilots."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Complete the setup, including the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,s.jsx)(n.li,{children:"Disable downloading the latest updates"}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"npm run dev"})," to then test in ACARS"]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"npm run dist"})," to create the ZIP"]}),"\n",(0,s.jsx)(n.li,{children:"Upload this zip somewhere"}),"\n",(0,s.jsx)(n.li,{children:"Update the phpVMS ACARS Admin to point to the above URL"}),"\n",(0,s.jsx)(n.li,{children:"???"}),"\n",(0,s.jsx)(n.li,{children:"Profit!"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.h4,{id:"required",children:"Required:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"nodejs/npm or pnpm"}),"\n",(0,s.jsx)(n.li,{children:"Typescript"}),"\n",(0,s.jsx)(n.li,{children:"Gulp"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"customizing-using-the-env-file",children:["Customizing using the ",(0,s.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,s.jsxs)(n.p,{children:["Next, copy the ",(0,s.jsx)(n.code,{children:".env.default"})," to ",(0,s.jsx)(n.code,{children:".env"}),". Then edit this file to change the\nprofile name."]}),"\n",(0,s.jsx)(n.p,{children:"The available options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ACARS_PROFILE_NAME"})," - The default profile to use for testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ACARS_CONFIG_PATH"})," - The default usually works, but you can change this to\nthe path where you put ACARS, if you did a local install"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ACARS_SCRIPTS_PATH"})," - Uses the ",(0,s.jsx)(n.code,{children:"ACARS_PROFILE_NAME"})," to build the path to\nwhere the scripts should be sent after a build"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ACARS_DIST_ZIP"})," - The distribution filename"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.p,{children:"Then there are multiple commands you can use:"}),"\n",(0,s.jsx)(n.h3,{id:"build",children:"Build"}),"\n",(0,s.jsxs)(n.p,{children:["This creates a ",(0,s.jsx)(n.code,{children:"dist"})," directory, with all the JS files in it"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm run build\n"})}),"\n",(0,s.jsx)(n.p,{children:"This doesn't copy it anywhere, just runs a compile and build"}),"\n",(0,s.jsx)(n.h3,{id:"automatically-build-and-copy-to-acars",children:"Automatically build and copy to ACARS"}),"\n",(0,s.jsxs)(n.p,{children:["This will set up a watch, and then automatically transpile and then copy the\ncontents of the ",(0,s.jsx)(n.code,{children:"dist"})," folder into the ",(0,s.jsx)(n.code,{children:"ACARS_PROFILE_PATH"})," directory that's\ndefined in the ",(0,s.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm run dev\n"})}),"\n",(0,s.jsx)(n.h3,{id:"packaging-a-distribution-file",children:"Packaging a distribution file"}),"\n",(0,s.jsx)(n.p,{children:"Running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm run dist\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Creates a ",(0,s.jsx)(n.code,{children:"dist.zip"})," (you can rename it in the ",(0,s.jsx)(n.code,{children:".env"})," file) after running a\nbuild. You can modify the ",(0,s.jsx)(n.code,{children:"gulpfile.mjs"})," to include other files - by default,\nanything in the ",(0,s.jsx)(n.code,{children:"dist"})," directory gets packaged. You can then configure GitHub\nActions to then upload this zip somewhere for ACARS to download."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"disable-downloading-latest-defaults",children:"Disable Downloading Latest Defaults"}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes, it's just useful to disable downloading of the latest defaults, and\njust edit the scripts that are included to see how they work. To do that, create\na file in your ",(0,s.jsx)(n.code,{children:"Documents/vmsacars"})," directory, called ",(0,s.jsx)(n.code,{children:"appsettings.local.json"}),",\nand place the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'filename="appsettings.local.json"',children:'{\n  "Config": {\n    "App": {\n      "DownloadConfig": false\n    }\n  },\n  "Serilog": {\n    "MinimumLevel": {\n      "Default": "Verbose"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:'You can also adjust the log level to "Information", "Debug" or "Verbose"\n("Debug" is recommended)'})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);