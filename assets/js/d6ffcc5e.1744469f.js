"use strict";(self.webpackChunkphpvms_docs=self.webpackChunkphpvms_docs||[]).push([[8981],{1501:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"acars/customizing/tutorial","title":"Plugin Tutorial","description":"You are required to have Node.js installed on your machine. You can download it","source":"@site/docs/acars/customizing/tutorial.md","sourceDirName":"acars/customizing","slug":"/acars/customizing/tutorial","permalink":"/acars/customizing/tutorial","draft":false,"unlisted":false,"editUrl":"https://github.com/phpvms/docs/tree/master/docs/acars/customizing/tutorial.md","tags":[],"version":"current","frontMatter":{"id":"tutorial","title":"Plugin Tutorial"},"sidebar":"docs","previous":{"title":"Custom Rules","permalink":"/acars/customizing/rules"},"next":{"title":"Getting Help","permalink":"/help"}}');var s=t(4848),a=t(8453);const r={id:"tutorial",title:"Plugin Tutorial"},l="Setting Up Your Environment",o={},d=[];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"setting-up-your-environment",children:"Setting Up Your Environment"})}),"\n",(0,s.jsxs)(n.p,{children:["You are required to have Node.js installed on your machine. You can download it\nfrom ",(0,s.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"here"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Create a new plugin repository by cloning the ",(0,s.jsx)(n.a,{href:"https://github.com/phpvms/acars-pdk",children:"acars-pdk"}),' repository by\nclicking "Use this template", and then "Creat a new repository"']}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(9204).A+"",width:"1313",height:"189"})}),"\n",(0,s.jsx)(n.p,{children:"Clone your new repository to your local machine"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Copy the ",(0,s.jsx)(n.code,{children:".env.example"})," to ",(0,s.jsx)(n.code,{children:".env"})]}),"\n",(0,s.jsxs)(n.li,{children:["Edit the file to set your ",(0,s.jsx)(n.code,{children:"ACARS_PROFILE_NAME"})]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"npm install"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dotenv",children:"# This is the profile name to use when exporting\nACARS_PROFILE_NAME=phpvms.net\n\n# This is the path to the configuration root\nACARS_CONFIG_PATH=$HOME/Documents/vmsacars\n\n# This is the path to where the scripts, etc are stored\n# It's used in the live-watch\nACARS_SCRIPTS_PATH=$HOME/Documents/vmsacars/data/$ACARS_PROFILE_NAME/config\n\n# Name of the distribution zip file that's created\nACARS_DIST_ZIP=dist.zip\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"creating-a-rule",children:"Creating a rule"}),"\n",(0,s.jsxs)(n.p,{children:["Create a rule file under ",(0,s.jsx)(n.code,{children:"src/rules/example.ts"}),", and you can use the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"/**\n * This is an example rule that you can use as a template\n */\nimport { Meta, Rule, RuleValue } from '../types/rule'\nimport { Pirep, Telemetry } from '../types/types'\nimport { PirepState } from '../defs.js'\n\n/**\n * This is the rule class that will be used to check the rule\n * The name doesn't really matter, but it should be unique\n */\nexport default class ExampleRule implements Rule {\n\n  /*\n   * You can look at the definition of Meta for the fields\n   * But you can also add additional fields for your rule\n   * if you want\n   */\n  meta: Meta = {\n    id: 'ExampleRule',\n    name: 'An Example Rule',\n    enabled: true,\n    message: 'A example rule!',\n    states: [],\n    repeatable: false,\n    cooldown: 60,\n    max_count: 3,\n    points: -1,\n    delay_time: 5000,\n  }\n\n  violated(pirep: Pirep, data: Telemetry, previousData?: Telemetry): RuleValue {\n\n    /*\n     * This will check that this rule has been violated\n     * for this number of milliseconds specified in the\n     * delay_time\n     */\n    return Acars.ViolatedAfterDelay(\n      this.meta.name,\n      this.meta.delay_time,\n      (): RuleValue => {\n        return ['The example was violated!', this.meta.points]\n      },\n    )\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h1,{id:"compile-and-build",children:"Compile and Build"}),"\n",(0,s.jsx)(n.p,{children:"Run the following to compile the Typescript and build the distribution:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will also watch the ",(0,s.jsx)(n.code,{children:"src/"})," directory for changes and recompile and copy\nthem. Next, launch ACARS, and start a flight. In the logs, you should see a log\nthat looks like:"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Adding module file:///path/to/data/phpvms.net/config/aircraft/example.js"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now the above rule won't do anything, because we haven't added any active states.\nMake sure that you're still running the above ",(0,s.jsx)(n.code,{children:"npm run local"})," command, and let's\nchange the rule to add states it's valid in:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"meta: Meta = {\n  // ...\n  states: [PirepState.Boarding],\n  // ...\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"You should see the rule being copied to the directory, and then ACARS reloading\nthe rules:"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:'Detected change in space=rules; file=example.js; type="Changed"'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"And then you should see some logs about the rule being run:"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Starting timer for An Example Rule_violated_after",(0,s.jsx)(n.br,{}),"\n","Rule: An Example Rule - Timer delay of 5993.9036 passed, marking violated",(0,s.jsx)(n.br,{}),"\n","Rule: An Example Rule, rule: The example was violated!, -1 points",(0,s.jsx)(n.br,{}),"\n","Violation: An Example Rule (1x) - The example was violated!;"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"distribute",children:"Distribute"}),"\n",(0,s.jsx)(n.p,{children:"Now that you have your rule, you can distribute it to other users. Run the\nfollowing to create a distribution zip file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run export\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will create a zip file in the ",(0,s.jsx)(n.code,{children:"dist/"})," directory, by default it's named\n",(0,s.jsx)(n.code,{children:"dist.zip"}),". You can rename this in the ",(0,s.jsx)(n.code,{children:".env"})," file. Upload this file somewhere,\nand then, in the ACARS web module, set the URL. It will then get downloaded by\nACARS and loaded in."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},9204:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/clone-repo-9ee0a7dbf41cd4cc4ea8fde5a0aa6852.png"}}]);